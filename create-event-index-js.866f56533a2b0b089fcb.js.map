{"version":3,"sources":["webpack:///./components/notification/index.js","webpack:///./utils/fetch-error.js","webpack:///./database/decorator.js","webpack:///./database/index.js","webpack:///./components/create-event/index.js","webpack:///./utils/escape-html.js","webpack:///./pages/create-event/index.js"],"names":["message","status","toastTemplate","toastContainer","document","querySelector","wrapper","createElement","innerHTML","toastElement","firstElementChild","appendChild","toast","lastElementChild","bootstrap","Toast","animation","autohide","delay","show","setTimeout","remove","FetchError","Error","constructor","response","super","this","window","addEventListener","event","reason","alert","BACKEND_URL","process","SYSTEM","QueriesFactory","_instance","type","data","query","Response","define","fn","async","fetch","url","options","ok","statusText","showToast","console","error","getTry","args","apply","TypeError","get","method","result","json","dataResult","map","item","id","JSON","parse","isTimeSlotEmpty","some","day","time","post","headers","body","stringify","delete","instance","CreateEvent","users","preventDefault","chosenDay","element","querySelectorAll","chosenTime","chosenMembers","setEventName","value","newEventData","name","replace","Object","values","find","selected","members","filter","checked","reduce","acc","length","location","href","render","template","initEventListeners","forEach","onFormSubmit","getMembersDropdown","getDaysDropdown","getEventHoursDropdown","member","join","days","getEventHours","a","i","start","end","duration","push","destroy","Page","subElements","getSubElements","initComponents","renderComponents","accum","subElement","dataset","createEvent","components","keys","component","root","append"],"mappings":"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","file":"create-event-index-js.866f56533a2b0b089fcb.js","sourcesContent":["export default (message = 'API response: succesful', status) => {\n  const toastDelay = 2000;\n\n  const toastTemplate = `\n    <div class=\"toast calendar__toast_${status} align-items-center\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n      <div class=\"d-flex\">\n        <div class=\"toast-body\">\n          ${message}\n        </div>\n      </div>\n    </div>`;\n\n  const toastContainer = document.querySelector('.toast-container');\n\n  // tramsform toast template to html element\n  const wrapper = document.createElement('div');\n  wrapper.innerHTML = toastTemplate;\n  const toastElement = wrapper.firstElementChild;\n\n  toastContainer.appendChild(toastElement);\n\n  const toast = toastContainer.lastElementChild;\n  const toastRender = new bootstrap.Toast(toast, {\n    animation: true,\n    autohide: true,\n    delay: toastDelay,\n  });\n\n  toastRender.show();\n\n  setTimeout(() => {\n    toastContainer.firstElementChild.remove();\n  }, toastDelay);\n};\n","export default class FetchError extends Error {\n  name = 'FetchError';\n\n  constructor(response, message) {\n    super(message);\n    this.response = response;\n  }\n}\n\n// handle uncaught failed fetch through\nwindow.addEventListener('unhandledrejection', (event) => {\n  if (event.reason instanceof FetchError) {\n    alert(event.reason.message);\n  }\n});\n","import FetchError from '../utils/fetch-error';\nimport showToast from '../components/notification';\n\nfunction Catch(fn) {\n  return async function (...args) {\n    let response;\n\n    try {\n      response = await fn.apply(this, args);\n      return response;\n    } catch (error) {\n      if (error instanceof TypeError)\n        console.error(new FetchError(response, error));\n\n      setTimeout(() => {\n        showToast(\n          `API: something went wrong with getting ${this.data}`,\n          'error'\n        );\n      }, 100);\n    }\n  };\n}\n\nexport default Catch;\n","import showToast from '../components/notification';\nimport Catch from './decorator';\n\nconst BACKEND_URL = process.env.BACKEND_URL;\nconst SYSTEM = process.env.SYSTEM;\nconst ENTITY_EVENTS = process.env.ENTITY_EVENTS;\nconst ENTITY_USERS = process.env.ENTITY_USERS;\n\nclass Get {\n  constructor(data) {\n    this.data = data;\n    this.message = `${data} downloaded`;\n\n    if (data === 'users') {\n      this.url = `${BACKEND_URL}/${SYSTEM}/${ENTITY_USERS}`;\n    }\n    if (data === 'events') {\n      this.url = `${BACKEND_URL}/${SYSTEM}/${ENTITY_EVENTS}`;\n    }\n\n    this.options = {\n      method: 'GET',\n    };\n  }\n\n  async getTry(response) {\n    const result = await response.json();\n\n    const dataResult = await result.map((item) => ({\n      id: item.id,\n      data: JSON.parse(item.data),\n    }));\n\n    setTimeout(\n      () => showToast(`API: ${this.message} succesfully`, 'succesful'),\n      100\n    );\n\n    return dataResult;\n  }\n}\n\nclass Post {\n  constructor(data) {\n    this.data = data;\n    this.message = `${data} posted`;\n    this.url = `${BACKEND_URL}/${SYSTEM}/${ENTITY_EVENTS}`;\n    this.options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({\n        data: JSON.stringify(data),\n      }),\n    };\n  }\n\n  async getTry() {\n    showToast('API: event posted succesfully', 'succesful');\n  }\n}\n\nclass Delete {\n  constructor(data) {\n    this.data = data;\n    this.url = `${BACKEND_URL}/${SYSTEM}/${ENTITY_EVENTS}/` + data;\n    this.options = {\n      method: 'DELETE',\n    };\n  }\n\n  async getTry(response) {\n    showToast(`API: event deleted succesfully`, 'succesful');\n\n    return response.ok;\n  }\n}\n\nclass IsTimeSlotEmpty {\n  constructor(data) {\n    this.data = data;\n    this.url = `${BACKEND_URL}/${SYSTEM}/${ENTITY_EVENTS}`;\n    this.options = {\n      method: 'GET',\n    };\n  }\n\n  async getTry(response) {\n    const result = await response.json();\n\n    if ((await result) === null) {\n      showToast('No data', 'warning');\n      return true;\n    }\n\n    const isTimeSlotFull = await result.some(\n      (item) =>\n        JSON.parse(item.data).day === this.data.day &&\n        JSON.parse(item.data).time === this.data.time\n    );\n\n    if (isTimeSlotFull) {\n      showToast(\n        'API: This time slot is already occupied. Please choose another day or time',\n        'warning'\n      );\n      return false;\n    }\n\n    return true;\n  }\n}\n\nclass QueriesFactory {\n  static instance() {\n    if (!this._instance) {\n      this._instance = new QueriesFactory();\n    }\n    return this._instance;\n  }\n\n  static response = {\n    get: Get,\n    isTimeSlotEmpty: IsTimeSlotEmpty,\n    post: Post,\n    delete: Delete,\n  };\n\n  /* this is the response body template for factory */\n  response(type, data) {\n    const Response = QueriesFactory.response[type];\n    const query = new Response(data);\n    query.type = type;\n\n    const responseBody = async function () {\n      const response = await fetch(this.url, this.options);\n\n      if (!response.ok) {\n        const message = `Error ${response.status}: ${response.statusText}`; // Not Found (for 404)\n        showToast(`API: ${message}`, 'error');\n\n        console.error(new FetchError(response, message));\n\n        return response.ok;\n      }\n\n      /*  different body for different responses */\n      return this.getTry(response);\n    };\n\n    /* Decorator */\n    query.define = Catch(responseBody);\n\n    return query;\n  }\n}\n\nexport default QueriesFactory.instance();\n","import escapeHtml from '../../utils/escape-html.js';\nimport showToast from '../notification';\nimport query from '../../database/index.js';\n\nexport default class CreateEvent {\n  element; //html element\n  start = 10;\n  end = 18;\n  duration = 1;\n  days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'];\n\n  constructor(users) {\n    this.members = users;\n\n    this.render();\n  }\n\n  onFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const chosenDay = this.element.querySelectorAll('[data-day]');\n    const chosenTime = this.element.querySelectorAll('[data-time]');\n    const chosenMembers = this.element.querySelectorAll('[data-member]');\n    const setEventName = this.element.querySelector('[data-name]').value;\n\n    const newEventData = {}; // event data template\n\n    newEventData.name = escapeHtml(setEventName);\n    newEventData.day = Object.values(chosenDay).find(\n      (item) => item.selected\n    ).value;\n    newEventData.time = Object.values(chosenTime).find(\n      (item) => item.selected\n    ).value;\n    newEventData.members = Object.values(chosenMembers)\n      .filter((item) => item.checked)\n      .reduce((acc, item) => {\n        return [...acc, { id: item.value }];\n      }, []);\n\n    if (!newEventData.name.length || !newEventData.members.length) {\n      showToast('Please fill out all fields', 'warning');\n    }\n\n    if (newEventData.name.length && newEventData.members.length) {\n      const response = await query.response('isTimeSlotEmpty', newEventData);\n      const isResponseOK = await response.define();\n\n      if (isResponseOK) {\n        const response = await query.response('post', newEventData);\n        await response.define();\n\n        setTimeout(() => {\n          document.location.href = '/meeting-planning-calendar/';\n        }, 2000);\n      }\n    }\n  };\n\n  render() {\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = this.template;\n\n    const element = wrapper.firstElementChild;\n    this.element = element;\n\n    this.initEventListeners();\n\n    return this.element;\n  }\n\n  initEventListeners() {\n    // set active all checkboxes\n    const allMembersCheckbox = this.element.querySelector(\n      '#allMembersCheckbox'\n    );\n\n    allMembersCheckbox.addEventListener('click', () => {\n      const allMembers = document.querySelectorAll('[data-member]');\n      [...allMembers].forEach((item) => (item.checked = !item.checked));\n    });\n\n    this.element.addEventListener('submit', this.onFormSubmit);\n  }\n\n  get template() {\n    return `\n    <div>\n      <form class='create-event__form'>\n        <div class='create-event__form-element'>\n          <div class='create-event__form-description'>\n            Name of the event:\n          </div>\n          <div class='create-event__form-input'>\n            <input\n              placeholder='Type here'\n              type='search'\n              class='form-control'\n              data-name='name'\n            />\n          </div>\n        </div>\n\n        <div class='create-event__form-element'>\n          <div class='create-event__form-description'>\n            Participants:\n          </div>\n          ${this.getMembersDropdown()}\n        </div>\n\n        <div class='create-event__form-element'>\n          <div class='create-event__form-description'>\n            Day:\n          </div>\n          ${this.getDaysDropdown()}\n        </div>\n\n        <div class='create-event__form-element'>\n          <div class='create-event__form-description'>\n            Time:\n          </div>\n          ${this.getEventHoursDropdown()}\n        </div>\n\n        <div class='create-event__buttons-container'>\n          <a href='/meeting-planning-calendar/'>\n            <button type=\"button\" class=\"btn btn-outline-dark create-event__button\">Cancel</button>\n          </a>\n\n          <button type=\"submit\" class=\"btn btn-outline-dark create-event__button\">Create</button>\n        </div>\n      </form>\n    </div>`;\n  }\n\n  getMembersDropdown() {\n    return `\n    <div class='create-event__form-input_multiselect'>\n      <div class=\"form-check\">\n        <input class=\"form-check-input\"type=\"checkbox\" id='allMembersCheckbox' value='All members'>\n        <label class=\"form-check-label\" for=\"allMembersCheckbox\">All members</label>\n      </div>\n      ${this.members\n        .map((member) => {\n          return `\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" class=\"member\" type=\"checkbox\" data-member=${member.id} value=${member.id}>\n            <label class=\"form-check-label\">${member.data.name}</label>\n          </div>`;\n        })\n        .join('')}\n    </div>`;\n  }\n\n  getDaysDropdown() {\n    return `\n    <div class='create-event__form-input'>\n      <select class='form-select form-select-lg'>\n        ${this.days\n          .map((day) => {\n            return `<option data-day='${day}' value='${day}'>${day}</option>`;\n          })\n          .join('')}\n      </select>\n    </div>`;\n  }\n\n  getEventHoursDropdown() {\n    return `\n    <div class='create-event__form-input'>\n      <select class='form-select form-select-lg'>\n        ${this.getEventHours()}\n      </select>\n    </div>`;\n  }\n\n  getEventHours() {\n    let a = [];\n\n    for (let i = this.start; i <= this.end; i = i + this.duration) {\n      a.push(`<option data-time='${i}'>${i}:00</option>`);\n    }\n\n    return a.join('');\n  }\n\n  destroy() {\n    this.element.remove();\n  }\n}\n","export default string => string\n  .replace(/&/g, '&amp;')\n  .replace(/\"/g, '&quot;')\n  .replace(/'/g, '&#39;')\n  .replace(/</g, '&lt;')\n  .replace(/>/g, '&gt;');\n","import CreateEvent from '../../components/create-event/index.js';\nimport query from '../../database';\n\nexport default class Page {\n  element; //html element\n  subElements = {}; //selected elements\n  components = {}; //imported initialized components\n  users = {};\n\n  get template() {\n    return `<div>\n      <div data-element=\"createEvent\">\n        <!-- CreateEvent component -->\n      </div>\n      <div aria-live=\"polite\" aria-atomic=\"true\" class=\"position-relative\">\n        <div class=\"toast-container position-fixed bottom-0 end-0 p-3\">\n          <!-- toast element -->\n        </div>\n      </div>\n    </div>`;\n  }\n\n  async render() {\n    const element = document.createElement('div');\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(this.element);\n\n    // query data from database\n    const response = await query.response('get', 'users');\n    this.users = await response.define();\n\n    this.initComponents();\n\n    this.renderComponents();\n\n    return this.element;\n  }\n\n  getSubElements(element) {\n    const elements = element.querySelectorAll('[data-element]');\n\n    return [...elements].reduce((accum, subElement) => {\n      accum[subElement.dataset.element] = subElement;\n\n      return accum;\n    }, {});\n  }\n\n  initComponents() {\n    const createEvent = new CreateEvent(this.users);\n    this.components.createEvent = createEvent;\n  }\n\n  renderComponents() {\n    Object.keys(this.components).forEach((component) => {\n      const root = this.subElements[component];\n      const { element } = this.components[component];\n\n      root.append(element);\n    });\n  }\n\n  destroy() {\n    for (const component of Object.values(this.components)) {\n      component.destroy();\n    }\n  }\n}\n"],"sourceRoot":""}