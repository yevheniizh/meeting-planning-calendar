{"version":3,"sources":["webpack:///./components/notification/index.js","webpack:///./utils/fetch-error.js","webpack:///./database/decorator.js","webpack:///./database/index.js","webpack:///./components/userRoles/index.js","webpack:///./components/calendar/index.js","webpack:///./components/logIn-modal/index.js","webpack:///./fixtures-members.js","webpack:///./pages/calendar/index.js"],"names":["message","status","toastTemplate","toastContainer","document","querySelector","wrapper","createElement","innerHTML","toastElement","firstElementChild","appendChild","toast","lastElementChild","bootstrap","Toast","animation","autohide","delay","show","setTimeout","remove","FetchError","Error","constructor","response","super","this","window","addEventListener","event","reason","alert","BACKEND_URL","process","SYSTEM","QueriesFactory","_instance","type","data","query","Response","define","fn","async","fetch","url","options","ok","statusText","showToast","console","error","getTry","args","apply","TypeError","get","method","result","json","dataResult","map","item","id","JSON","parse","isTimeSlotEmpty","some","day","time","post","headers","body","stringify","put","delete","instance","User","meetings","users","chosenMeeting","target","closest","chosenMeetingId","dataset","meeting","chosenMeetingName","name","confirm","sessionUser","sessionStorage","getItem","render","getTable","element","length","renderMeetings","subElements","getSubElements","initEventListeners","querySelectorAll","reduce","accum","subElement","getTableHeader","getTableBody","getTableFooter","rights","getMembersDropdown","getEventButton","membersList","user","join","canCreateMeetings","getTableHoursColumn","getTableColumn","a","i","start","end","duration","push","currentRow","canDeleteMeetings","dragAndDropEvents","dragged","style","opacity","preventDefault","background","parentNode","removeChild","draggedMeetingId","newDraggedMeetingDay","newDraggedMeetingTime","draggedMeeting","find","updatedMeeting","getResponse","deleteButton","button","onRemoveMeetingClick","membersDropdown","chosenMember","value","filterMeetings","clear","location","reload","Object","keys","visibility","idOfChosenMember","filteredMeetings","filter","members","every","member","includes","destroy","Admin","LogInModal","noMembersMock","Page","getMembers","getName","getRights","selectedIndex","getAttribute","memberLoggedInData","setItem","initComponents","renderComponents","template","responseUsers","responseEvents","getSessionUser","modal","logInModal","Modal","onDefineRights","calendar","components","forEach","component","root","append","values"],"mappings":"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","file":"calendar-index-js.ec029f6e4b3d80c95862.js","sourcesContent":["export default (message = 'API response: succesful', status) => {\n  const toastDelay = 2000;\n\n  const toastTemplate = `\n    <div class=\"toast calendar__toast_${status} align-items-center\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n      <div class=\"d-flex\">\n        <div class=\"toast-body\">\n          ${message}\n        </div>\n      </div>\n    </div>`;\n\n  const toastContainer = document.querySelector('.toast-container');\n\n  // tramsform toast template to html element\n  const wrapper = document.createElement('div');\n  wrapper.innerHTML = toastTemplate;\n  const toastElement = wrapper.firstElementChild;\n\n  toastContainer.appendChild(toastElement);\n\n  const toast = toastContainer.lastElementChild;\n  const toastRender = new bootstrap.Toast(toast, {\n    animation: true,\n    autohide: true,\n    delay: toastDelay,\n  });\n\n  toastRender.show();\n\n  setTimeout(() => {\n    toastContainer.firstElementChild.remove();\n  }, toastDelay);\n};\n","export default class FetchError extends Error {\n  name = 'FetchError';\n\n  constructor(response, message) {\n    super(message);\n    this.response = response;\n  }\n}\n\n// handle uncaught failed fetch through\nwindow.addEventListener('unhandledrejection', (event) => {\n  if (event.reason instanceof FetchError) {\n    alert(event.reason.message);\n  }\n});\n","import FetchError from '../utils/fetch-error';\nimport showToast from '../components/notification';\n\nfunction Catch(fn) {\n  return async function (...args) {\n    let response;\n\n    try {\n      response = await fn.apply(this, args);\n      return response;\n    } catch (error) {\n      if (error instanceof TypeError)\n        console.error(new FetchError(response, error));\n\n      setTimeout(() => {\n        showToast(\n          `API: something went wrong with getting ${this.data}`,\n          'error'\n        );\n      }, 100);\n    }\n  };\n}\n\nexport default Catch;\n","import showToast from '../components/notification';\nimport Catch from './decorator';\n\nconst BACKEND_URL = process.env.BACKEND_URL;\nconst SYSTEM = process.env.SYSTEM;\nconst ENTITY_EVENTS = process.env.ENTITY_EVENTS;\nconst ENTITY_USERS = process.env.ENTITY_USERS;\n\nclass Get {\n  constructor(data) {\n    this.data = data;\n    this.message = `${data} downloaded`;\n\n    if (data === 'users') {\n      this.url = `${BACKEND_URL}/${SYSTEM}/${ENTITY_USERS}`;\n    }\n    if (data === 'events') {\n      this.url = `${BACKEND_URL}/${SYSTEM}/${ENTITY_EVENTS}`;\n    }\n\n    this.options = {\n      method: 'GET',\n    };\n  }\n\n  async getTry(response) {\n    const result = await response.json();\n\n    const dataResult = await result.map((item) => ({\n      id: item.id,\n      data: JSON.parse(item.data),\n    }));\n\n    setTimeout(\n      () => showToast(`API: ${this.message} succesfully`, 'succesful'),\n      100\n    );\n\n    return dataResult;\n  }\n}\n\nclass Post {\n  constructor(data) {\n    this.data = data;\n    this.message = `${data} posted`;\n    this.url = `${BACKEND_URL}/${SYSTEM}/${ENTITY_EVENTS}`;\n    this.options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({\n        data: JSON.stringify(data),\n      }),\n    };\n  }\n\n  async getTry() {\n    showToast('API: event posted succesfully', 'succesful');\n  }\n}\n\nclass Delete {\n  constructor(data) {\n    this.data = data;\n    this.url = `${BACKEND_URL}/${SYSTEM}/${ENTITY_EVENTS}/` + data;\n    this.options = {\n      method: 'DELETE',\n    };\n  }\n\n  async getTry(response) {\n    setTimeout(\n      () => showToast(`API: event deleted succesfully`, 'succesful'),\n      100\n    );\n\n    return response.ok;\n  }\n}\n\nclass IsTimeSlotEmpty {\n  constructor(data) {\n    this.data = data;\n    this.url = `${BACKEND_URL}/${SYSTEM}/${ENTITY_EVENTS}`;\n    this.options = {\n      method: 'GET',\n    };\n  }\n\n  async getTry(response) {\n    const result = await response.json();\n\n    if ((await result) === null) {\n      showToast('No data', 'warning');\n      return true;\n    }\n\n    const isTimeSlotFull = await result.some(\n      (item) =>\n        JSON.parse(item.data).day === this.data.day &&\n        JSON.parse(item.data).time === this.data.time\n    );\n\n    if (isTimeSlotFull) {\n      showToast(\n        'API: This time slot is already occupied. Please choose another day or time',\n        'warning'\n      );\n      return false;\n    }\n\n    return true;\n  }\n}\n\nclass Put {\n  constructor(data) {\n    this.data = data;\n    this.url = `${BACKEND_URL}/${SYSTEM}/${ENTITY_EVENTS}/${data.id}`;\n    this.options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({\n        data: JSON.stringify(data.data),\n      }),\n    };\n  }\n\n  async getTry() {\n    showToast('API: event changed succesfully', 'succesful');\n  }\n}\n\nclass QueriesFactory {\n  static instance() {\n    if (!this._instance) {\n      this._instance = new QueriesFactory();\n    }\n    return this._instance;\n  }\n\n  static response = {\n    get: Get,\n    isTimeSlotEmpty: IsTimeSlotEmpty,\n    post: Post,\n    put: Put,\n    delete: Delete,\n  };\n\n  /* this is the response body template for factory */\n  response(type, data) {\n    const Response = QueriesFactory.response[type];\n    const query = new Response(data);\n    query.type = type;\n\n    const responseBody = async function () {\n      const response = await fetch(this.url, this.options);\n\n      if (!response.ok) {\n        const message = `Error ${response.status}: ${response.statusText}`; // Not Found (for 404)\n        showToast(`API: ${message}`, 'error');\n\n        console.error(new FetchError(response, message));\n\n        return response.ok;\n      }\n\n      /*  different body for different responses */\n      return this.getTry(response);\n    };\n\n    /* Decorator */\n    query.define = Catch(responseBody);\n\n    return query;\n  }\n}\n\nexport default QueriesFactory.instance();\n","import Calendar from '../calendar';\n\nexport class User extends Calendar {\n  constructor(meetings, users) {\n    super(meetings, users);\n  }\n\n  canDeleteMeetings() {\n    return false;\n  }\n\n  canCreateMeetings() {\n    return false;\n  }\n}\n\nexport class Admin extends User {\n  constructor(meetings, users) {\n    super(meetings, users);\n  }\n\n  canDeleteMeetings() {\n    return true;\n  }\n\n  canCreateMeetings() {\n    return true;\n  }\n}\n","import query from '../../database';\nimport showToast from '../notification';\n\nexport default class Calendar {\n  element; //html element\n  subElements = {}; //html element, meetings\n  start = 10;\n  end = 18;\n  duration = 1;\n\n  onRemoveMeetingClick = async (event) => {\n    const chosenMeeting = event.target.closest('[data-meeting]');\n    const chosenMeetingId = chosenMeeting.dataset.meeting;\n    const chosenMeetingName = chosenMeeting.dataset.name;\n\n    const modal = confirm(\n      `Are you sure you want to delete '${chosenMeetingName}' event?`\n    );\n\n    if (modal) {\n      const response = await query.response('delete', chosenMeetingId);\n      const isResponseOK = await response.define();\n\n      if (isResponseOK) chosenMeeting.remove();\n    }\n  };\n\n  constructor(meetings, users) {\n    this.meetings = meetings;\n    this.users = users;\n\n    this.sessionUser = JSON.parse(sessionStorage.getItem('memberLoggedIn'));\n\n    this.render();\n  }\n\n  render() {\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = this.getTable();\n\n    const element = wrapper.firstElementChild;\n    this.element = element;\n\n    if (this.meetings.length) this.renderMeetings(this.meetings);\n\n    this.subElements = this.getSubElements(this.element);\n\n    this.initEventListeners(this.meetings);\n\n    return this.element;\n  }\n\n  getSubElements(element = this.element) {\n    const elements = element.querySelectorAll('[data-meeting]');\n\n    return [...elements].reduce((accum, subElement) => {\n      accum[subElement.dataset.meeting] = subElement;\n\n      return accum;\n    }, {});\n  }\n\n  getTable() {\n    return `\n      <div class='calendar'>\n        ${this.getTableHeader()}\n        ${this.getTableBody()}\n        ${this.getTableFooter()}\n        <div aria-live=\"polite\" aria-atomic=\"true\" class=\"position-relative\">\n          <div class=\"toast-container position-fixed bottom-0 end-0 p-3\">\n\n          </div>\n        </div>\n      </div>`;\n  }\n\n  getTableFooter() {\n    return `<div class='calendar__footer'>\n      <div>\n        You are logged in as ${this.sessionUser.name} (${this.sessionUser.rights})\n      </div>\n      <button type='button' class='btn btn-outline-secondary' id='logOutButton'>\n        Log out\n      </button>\n    </div>`;\n  }\n\n  getTableHeader() {\n    return `\n      <div class='calendar__header'>\n        <div>\n          <h1>Calendar</h1>\n        </div>\n        <div class='calendar__header_handling'>\n            ${this.getMembersDropdown()}\n            ${this.getEventButton}\n        </div>\n      </div>\n    `;\n  }\n\n  getMembersDropdown() {\n    if (this.sessionUser.name === 'guest') {\n      return `\n      <div class='calendar__header_handling-dropdown'>\n        <select class='form-select form-select-lg' id='membersDropdown'>\n          <option value='All members'>All members</option>\n        </select>\n      </div>`;\n    }\n\n    return `\n    <div class='calendar__header_handling-dropdown'>\n      <select class='form-select form-select-lg' id='membersDropdown'>\n        <option value='All members'>All members</option>\n        ${this.membersList}\n      </select>\n    </div>`;\n  }\n\n  get membersList() {\n    return this.users\n      .map((user) => {\n        return `<option value='${user.data.name}' data-member='${user.data.name}'>${user.data.name}</option>`;\n      })\n      .join('');\n  }\n\n  get getEventButton() {\n    if (this.canCreateMeetings()) {\n      return `\n    <div class='calendar__header_handling-newEventCreatingButton'>\n      <a href='/meeting-planning-calendar/create-event'>\n        <button\n          type='submit'\n          name='newEvent'\n          class='btn btn-outline-dark'\n        >\n        New event +\n        </button>\n      </a>\n    </div>`;\n    }\n\n    return `\n    <div class='calendar__header_handling-newEventCreatingButton'>\n        <button\n          type='submit'\n          name='newEvent'\n          class='btn btn-outline-dark disabled'\n        >\n        New event +\n        </button>\n    </div>`;\n  }\n\n  getTableBody() {\n    return `<div class='calendar__table'>\n      <ul class='calendar__table-column' data-day='Name'>\n        <li class='calendar__table-column-header'>Name</li>\n        ${this.getTableHoursColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Mon'>\n        <li class='calendar__table-column-header'>Mon</li>\n        ${this.getTableColumn('Mon')}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Tue'>\n        <li class='calendar__table-column-header'>Tue</li>\n        ${this.getTableColumn('Tue')}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Wed'>\n        <li class='calendar__table-column-header'>Wed</li>\n        ${this.getTableColumn('Wed')}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Thu'>\n        <li class='calendar__table-column-header'>Thu</li>\n        ${this.getTableColumn('Thu')}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Fri'>\n        <li class='calendar__table-column-header'>Fri</li>\n        ${this.getTableColumn('Fri')}\n      </ul>\n    </div>`;\n  }\n\n  getTableHoursColumn() {\n    let a = [];\n\n    for (let i = this.start; i <= this.end; i = i + this.duration) {\n      a.push(`<li>${i}:00</li>`);\n    }\n\n    return a.join('');\n  }\n\n  getTableColumn(day) {\n    let a = [];\n\n    for (let i = this.start; i <= this.end; i = i + this.duration) {\n      a.push(\n        `<li\n          data-time='${i}:00'\n          data-day='${day}'\n        ></li>`\n      );\n    }\n\n    return a.join('');\n  }\n\n  renderMeetings(meetings) {\n    const arr = [...meetings];\n    arr.map((meeting) => {\n      const currentColumn = this.element.querySelector(\n        `[data-day='${meeting.data.day}']`\n      );\n      const currentRow = currentColumn.querySelector(\n        `[data-time='${meeting.data.time}']`\n      );\n\n      if (this.canDeleteMeetings()) {\n        return (currentRow.innerHTML = `\n      <div draggable='true' data-meeting='${meeting.id}' data-meetingDay='${meeting.data.day}' data-meetingTime='${meeting.data.time}' style='visibility: visible'>\n          <div class='calendar__table-column_meeting'>\n            ${meeting.data.name}\n          </div>\n        <button class='calendar__table-column_meeting_delete' data-delete='delete'>&times;</button>\n      </div>`);\n      }\n\n      return (currentRow.innerHTML = `\n      <div data-meeting='${meeting.id}' data-name='${meeting.data.name}' style='visibility: visible'>\n        <div class='calendar__table-column_meeting'>\n          ${meeting.data.name}\n        </div>\n      </div>`);\n    });\n  }\n\n  dragAndDropEvents(meetings) {\n    let dragged;\n\n    document.addEventListener('dragstart', function (event) {\n      dragged = event.target;\n      event.target.style.opacity = 0.5;\n    });\n\n    document.addEventListener('dragend', function (event) {\n      event.target.style.opacity = '';\n    });\n\n    document.addEventListener('dragover', function (event) {\n      event.preventDefault();\n    });\n\n    document.addEventListener('dragenter', function (event) {\n      if (event.target.dataset.time) {\n        event.target.style.background = 'purple';\n      }\n    });\n\n    document.addEventListener('dragleave', function (event) {\n      if (event.target.dataset.time) {\n        event.target.style.background = '';\n      }\n    });\n\n    async function getResponse(updatedMeeting) {\n      const response = await query.response('put', updatedMeeting);\n      await response.define();\n    }\n\n    document.addEventListener('drop', function (event) {\n      event.preventDefault();\n\n      if (event.target.dataset.time) {\n        event.target.style.background = '';\n        dragged.parentNode.removeChild(dragged);\n        event.target.appendChild(dragged);\n\n        const draggedMeetingId = dragged.dataset.meeting;\n\n        // set updated data into DOM\n        const newDraggedMeetingDay = event.target.dataset.day;\n        const newDraggedMeetingTime = event.target.dataset.time;\n\n        const draggedMeeting = [...meetings].find(\n          ({ id }) => id === draggedMeetingId\n        );\n\n        draggedMeeting.data.day = newDraggedMeetingDay;\n        draggedMeeting.data.time = newDraggedMeetingTime;\n        getResponse(draggedMeeting);\n      }\n    });\n  }\n\n  initEventListeners(meetings) {\n    this.dragAndDropEvents(meetings);\n\n    // remove event from calendar\n    if (this.canDeleteMeetings()) {\n      const deleteButton = this.element.querySelectorAll('[data-delete]');\n      for (let button of deleteButton) {\n        button.addEventListener('pointerdown', this.onRemoveMeetingClick);\n      }\n    }\n\n    // filter events by team member\n    const membersDropdown = this.element.querySelector('#membersDropdown');\n    membersDropdown.addEventListener('change', () => {\n      const chosenMember = membersDropdown.value;\n      this.filterMeetings(chosenMember);\n    });\n\n    // log out from user session\n    const logOutButton = this.element.querySelector('#logOutButton');\n    logOutButton.addEventListener('click', () => {\n      sessionStorage.clear();\n      window.location.reload();\n    });\n  }\n\n  filterMeetings(chosenMember) {\n    if (!this.meetings.length)\n      return showToast('No events to filter', 'warning');\n\n    if (chosenMember === 'All members') {\n      for (let item of Object.keys(this.subElements)) {\n        this.subElements[item].style.visibility = 'visible';\n      }\n\n      return [...this.meetings];\n    }\n\n    const meetings = [...this.meetings];\n    const users = [...this.users];\n    const idOfChosenMember = users.find(\n      ({ data }) => data.name === chosenMember\n    ).id;\n\n    // get all meetings that must be disabled\n    const filteredMeetings = meetings\n      .filter((meeting) =>\n        meeting.data.members.every((member) => member.id !== idOfChosenMember)\n      )\n      .map((item) => item.id);\n\n    // insert style = 'display: visible' into all meetings\n    for (let item of Object.keys(this.subElements)) {\n      this.subElements[item].style.visibility = 'visible';\n    }\n\n    // insert style = 'display: none' into filtered¸ meetings\n    for (let item of filteredMeetings) {\n      if (Object.keys(this.subElements).includes(item)) {\n        this.subElements[item].style.visibility = 'hidden';\n      }\n    }\n\n    return filteredMeetings;\n  }\n\n  destroy() {\n    this.element.remove();\n  }\n}\n","export default class LogInModal {\n  constructor(users) {\n    this.members = users;\n  }\n\n  get template() {\n    return `\n    <div class=\"modal fade modal-dialog\"  id=\"staticBackdrop\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Who are You?</h5>\n          </div>\n          <div class=\"modal-body\">\n            <div class='calendar__header_handling-dropdown'>\n              <select class='form-select form-select-lg' id='membersDropdownModal'>\n                ${this.members\n                  .map((member) => {\n                    return `<option value='${member.data.name}' data-rights='${member.data.rights}'>${member.data.name} (${member.data.rights})</option>`;\n                  })\n                  .join('')}\n              </select>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" id=\"submitRoleButton\">Confirm</button>\n          </div>\n        </div>\n      </div>\n    </div>`;\n  }\n}\n","export const membersMock = [\n  { id: '0001', data: { name: 'Polina', rights: 'admin' } },\n  { id: '0002', data: { name: 'Maria', rights: 'user' } },\n  { id: '0003', data: { name: 'Bob', rights: 'user' } },\n  { id: '0004', data: { name: 'Alex', rights: 'user' } },\n];\n\nexport const noMembersMock = [\n  { id: '0000', data: { name: 'guest', rights: 'user' } },\n];\n","import { User, Admin } from '../../components/userRoles';\nimport LogInModal from '../../components/logIn-modal';\nimport query from '../../database';\nimport { noMembersMock } from '../../fixtures-members';\n\nexport default class Page {\n  element; //html element\n  subElements = {}; //selected elements\n  components = {}; //imported initialized components\n  meetings = {};\n  users = {};\n\n  get template() {\n    return `\n      <div>\n        <div data-element=\"calendar\" id=\"calendarPage\">\n          <!-- Calendar component -->\n        </div>\n        <div aria-live=\"polite\" aria-atomic=\"true\" class=\"position-relative\">\n          <div class=\"toast-container position-fixed bottom-0 end-0 p-3\">\n\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  async render() {\n    const element = document.createElement('div');\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(this.element);\n\n    // query data from database\n    const responseUsers = await query.response('get', 'users');\n    const responseEvents = await query.response('get', 'events');\n    this.users = (await responseUsers.define()) || noMembersMock;\n    this.meetings = (await responseEvents.define()) || [];\n\n    const getSessionUser = JSON.parse(sessionStorage.getItem('memberLoggedIn'));\n\n    if (getSessionUser) {\n      this.initComponents(getSessionUser.rights);\n      this.renderComponents();\n\n      return this.element;\n    }\n\n    this.modal();\n\n    return this.element;\n  }\n\n  // async sendUsersToServer() {\n  //   // post users to server\n  //   try {\n  //     const response = await fetch(`${BACKEND_URL}/${SYSTEM}/${ENTITY_USERS}`, {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json;charset=utf-8',\n  //       },\n  //       body: JSON.stringify({\n  //         data: JSON.stringify(membersTemplate[0]),\n  //       }),\n  //     });\n\n  //     const result = await response.status;\n  //     console.log(result);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n\n  modal() {\n    const logInModal = new LogInModal(this.users);\n    this.element.querySelector('#calendarPage').innerHTML = logInModal.template;\n\n    const myModal = new bootstrap.Modal(\n      this.element.querySelector('#staticBackdrop'),\n      {}\n    );\n\n    myModal.show();\n\n    const submitRoleButton = this.element.querySelector('#submitRoleButton');\n    submitRoleButton.addEventListener('pointerdown', this.onDefineRights);\n  }\n\n  onDefineRights = () => {\n    // set logged in member as default selected member in calendar dropdown\n    const getMembers = this.element.querySelector('#membersDropdownModal');\n\n    const getName = getMembers.value;\n    const getRights = getMembers.options[getMembers.selectedIndex].getAttribute(\n      'data-rights'\n    );\n\n    const memberLoggedInData = { name: getName, rights: getRights };\n\n    // set session user rights\n    sessionStorage.setItem(\n      'memberLoggedIn',\n      JSON.stringify(memberLoggedInData)\n    );\n\n    document.querySelector('#staticBackdrop').remove();\n    document.querySelector('.modal-backdrop').remove();\n\n    this.initComponents(getRights);\n    this.renderComponents();\n  };\n\n  getSubElements(element) {\n    const elements = element.querySelectorAll('[data-element]');\n\n    return [...elements].reduce((accum, subElement) => {\n      accum[subElement.dataset.element] = subElement;\n\n      return accum;\n    }, {});\n  }\n\n  initComponents(rights) {\n    if (rights === 'admin') {\n      const calendar = new Admin(this.meetings, this.users);\n      return (this.components.calendar = calendar);\n    }\n\n    const calendar = new User(this.meetings, this.users);\n    return (this.components.calendar = calendar);\n  }\n\n  renderComponents() {\n    Object.keys(this.components).forEach((component) => {\n      const root = this.subElements[component];\n      const { element } = this.components[component];\n\n      root.append(element);\n    });\n  }\n\n  destroy() {\n    for (const component of Object.values(this.components)) {\n      component.destroy();\n    }\n  }\n}\n"],"sourceRoot":""}