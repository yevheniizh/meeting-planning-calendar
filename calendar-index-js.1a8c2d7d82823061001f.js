(self.webpackChunk=self.webpackChunk||[]).push([[849],{269:(e,t,n)=>{"use strict";function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.r(t),n.d(t,{default:()=>d});class l{constructor(){s(this,"element",void 0),s(this,"subElements",{}),s(this,"start",10),s(this,"end",18),s(this,"duration",1),s(this,"onRemoveMeetingClick",(e=>{const t=e.target.closest("[data-meeting]"),n=t.dataset.name,s=JSON.parse(localStorage.getItem("meetingsDB")).filter((e=>e.id!==t.dataset.meeting));localStorage.setItem("meetingsDB",JSON.stringify(s)),confirm(`Are you sure you want to delete '${n}' event?`)&&t.remove()})),this.meetings=JSON.parse(localStorage.getItem("meetingsDB")),this.members=JSON.parse(localStorage.getItem("membersDB")),this.render()}render(){const e=document.createElement("div");e.innerHTML=this.getTable();const t=e.firstElementChild;return this.element=t,this.renderMeetings(this.meetings),this.subElements=this.getSubElements(this.element),this.initEventListeners(),this.element}getSubElements(e){return[...e.querySelectorAll("[data-meeting]")].reduce(((e,t)=>(e[t.dataset.meeting]=t,e)),{})}getTable(){return`\n      <div class='calendar'>\n        ${this.getTableHeader()}\n        ${this.getTableBody()}\n      </div>`}getTableHeader(){return`\n      <div class='calendar__header'>\n        <div>\n          <h1>Calendar</h1>\n        </div>\n        <div class='calendar__header_handling'>\n            ${this.getMembersDropdown()}\n            ${this.getEventButton}\n        </div>\n      </div>\n    `}getMembersDropdown(){return`\n    <div class='calendar__header_handling-dropdown'>\n      <select class='form-select form-select-lg' id='membersDropdown'>\n        <option selected value='All members'>All members</option>\n        ${this.members.map((e=>`<option value='${e.name}'>${e.name}</option>`)).join("")}\n      </select>\n    </div>`}get getEventButton(){return"\n    <div class='calendar__header_handling-newEventCreatingButton'>\n      <a href='/meeting-planning-calendar/create-event'>\n        <button\n          type='submit'\n          name='newEvent'\n          class='btn btn-outline-dark'\n        >\n        New event +\n        </button>\n      </a>\n    </div>"}getTableBody(){return`<div class='calendar__table'>\n      <ul class='calendar__table-column' data-day='Name'>\n        <li class='calendar__table-column-header'>Name</li>\n        ${this.getTableHoursColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Mon'>\n        <li class='calendar__table-column-header'>Mon</li>\n        ${this.getTableColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Tue'>\n        <li class='calendar__table-column-header'>Tue</li>\n        ${this.getTableColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Wed'>\n        <li class='calendar__table-column-header'>Wed</li>\n        ${this.getTableColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Thu'>\n        <li class='calendar__table-column-header'>Thu</li>\n        ${this.getTableColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Fri'>\n        <li class='calendar__table-column-header'>Fri</li>\n        ${this.getTableColumn()}\n      </ul>\n    </div>`}getTableHoursColumn(){let e=[];for(let t=this.start;t<=this.end;t+=this.duration)e.push(`<li>${t}:00</li>`);return e.join("")}getTableColumn(){let e=[];for(let t=this.start;t<=this.end;t+=this.duration)e.push(`<li\n          data-time='${t}:00'\n        ></li>`);return e.join("")}renderMeetings(e){[...e].map((e=>this.element.querySelector(`[data-day='${e.day}']`).querySelector(`[data-time='${e.time}']`).innerHTML=`\n      <div data-meeting='${e.id}' data-name='${e.name}' style='visibility: visible'>\n        <a href='/meetings/${e.id}' class='calendar__table-column_meeting'>\n          ${e.name}\n        </a>\n        <button class='calendar__table-column_meeting_delete' data-delete='delete'>&times;</button>\n      </div>`))}initEventListeners(){const e=this.element.querySelectorAll("[data-delete]");for(let t of e)t.addEventListener("pointerdown",this.onRemoveMeetingClick);const t=this.element.querySelector("#membersDropdown");t.addEventListener("change",(()=>{const e=t.value;this.filterMeetings(e)}))}filterMeetings(e="All members"){if("All members"===e){for(let e of Object.keys(this.subElements))this.subElements[e].style.visibility="visible";return[...this.meetings]}const t=[...this.meetings],n=[...this.members].find((({name:t})=>t===e)).id,s=t.filter((({members:e})=>e.every((({id:e})=>e!==n)))).map((e=>e.id));for(let e of Object.keys(this.subElements))this.subElements[e].style.visibility="visible";for(let e of s)Object.keys(this.subElements).includes(e)&&(this.subElements[e].style.visibility="hidden")}destroy(){this.element.remove()}}const i=[{id:"0001",name:"Polina"},{id:"0002",name:"Maria"},{id:"0003",name:"Bob"},{id:"0004",name:"Alex"}],a=[{id:"0000-0000-0000-0001",name:"Daily Standup",day:"Mon",time:"11:00",members:[{id:"0001"},{id:"0002"},{id:"0003"},{id:"0004"}]},{id:"0000-0000-0000-0002",name:"Annual planning session",day:"Wed",time:"13:00",members:[{id:"0001"},{id:"0002"}]},{id:"0000-0000-0000-0003",name:"Retrospective",day:"Fri",time:"17:00",members:[{id:"0003"},{id:"0004"}]},{id:"0000-0000-0000-0004",name:"FE team sync",day:"Thu",time:"17:00",members:[{id:"0004"}]},{id:"0000-0000-0000-0005",name:"Planning session",day:"Tue",time:"10:00",members:[{id:"0001"},{id:"0004"}]}];function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class d{constructor(){r(this,"element",void 0),r(this,"subElements",{}),r(this,"components",{})}get template(){return"\n      <div class='schedule'>\n        <div data-element=\"calendar\">\n          \x3c!-- Calendar component --\x3e\n        </div>\n      </div>\n    "}render(){const e=document.createElement("div");return e.innerHTML=this.template,this.element=e.firstElementChild,this.subElements=this.getSubElements(this.element),this.initComponents(),this.renderComponents(),this.element}getSubElements(e){return[...e.querySelectorAll("[data-element]")].reduce(((e,t)=>(e[t.dataset.element]=t,e)),{})}initComponents(){null===JSON.parse(localStorage.getItem("meetingsDB"))&&localStorage.setItem("meetingsDB",JSON.stringify(a)),localStorage.setItem("membersDB",JSON.stringify(i));const e=new l;this.components.calendar=e}renderComponents(){Object.keys(this.components).forEach((e=>{const t=this.subElements[e],{element:n}=this.components[e];t.append(n)}))}destroy(){for(const e of Object.values(this.components))e.destroy()}}}}]);
//# sourceMappingURL=calendar-index-js.1a8c2d7d82823061001f.js.map