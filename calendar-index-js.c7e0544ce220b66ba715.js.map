{"version":3,"sources":["webpack:///./components/notification/index.js","webpack:///./components/userRoles/index.js","webpack:///./components/calendar/index.js","webpack:///./components/logIn-modal/index.js","webpack:///./pages/calendar/index.js"],"names":["message","status","toastTemplate","toastContainer","document","querySelector","wrapper","createElement","innerHTML","toastElement","firstElementChild","appendChild","toast","lastElementChild","bootstrap","Toast","animation","autohide","delay","show","setTimeout","remove","User","constructor","meetings","users","async","chosenMeeting","event","target","closest","chosenMeetingId","dataset","meeting","chosenMeetingName","name","confirm","response","fetch","method","ok","result","statusText","showToast","error","console","log","this","members","JSON","parse","localStorage","getItem","sessionUser","sessionStorage","render","getTable","element","length","renderMeetings","subElements","getSubElements","initEventListeners","querySelectorAll","reduce","accum","subElement","getTableHeader","getTableBody","getTableFooter","rights","getMembersDropdown","getEventButton","membersList","map","user","data","join","canCreateMeetings","getTableHoursColumn","getTableColumn","a","i","start","end","duration","push","currentRow","day","time","canDeleteMeetings","id","deleteButton","button","addEventListener","onRemoveMeetingClick","membersDropdown","chosenMember","value","filterMeetings","clear","window","location","reload","item","Object","keys","style","visibility","idOfChosenMember","find","filteredMeetings","filter","every","member","includes","destroy","super","Admin","LogInModal","BACKEND_URL","process","Page","getMembers","getName","getRights","options","selectedIndex","getAttribute","memberLoggedInData","setItem","stringify","initComponents","renderComponents","json","template","getData","getUsers","getSessionUser","modal","logInModal","Modal","onDefineRights","calendar","components","forEach","component","root","append","values"],"mappings":"mGAAA,SAAgBA,EAAU,0BAA2BC,KACnD,MAEMC,EAAiB,2CACeD,yJAG5BD,8CAKJG,EAAiBC,SAASC,cAAc,oBAGxCC,EAAUF,SAASG,cAAc,OACvCD,EAAQE,UAAYN,EACpB,MAAMO,EAAeH,EAAQI,kBAE7BP,EAAeQ,YAAYF,GAE3B,MAAMG,EAAQT,EAAeU,iBACT,IAAIC,UAAUC,MAAMH,EAAO,CAC7CI,WAAW,EACXC,UAAU,EACVC,MAxBiB,MA2BPC,OAEZC,YAAW,KACTjB,EAAeO,kBAAkBW,WA9BhB,O,8LCCd,MAAMC,UCIE,MAkDbC,YAAYC,EAAUC,GAAO,8CAhDf,IAgDe,eA/CrB,IA+CqB,aA9CvB,IA8CuB,kBA7ClB,GA6CkB,+BA3CNC,UACrB,MAAMC,EAAgBC,EAAMC,OAAOC,QAAQ,kBACrCC,EAAkBJ,EAAcK,QAAQC,QACxCC,EAAoBP,EAAcK,QAAQG,KAMhD,GAJcC,QACX,oCAAmCF,aAIpC,IACE,MAAMG,QAAiBC,MACpB,8DAA8CP,EAC/C,CACEQ,OAAQ,WAIZ,IAAKF,EAASG,GACZ,IACE,MAAMC,QAAeJ,EAASK,WAC9B,OAAOC,OAAW,QAAOF,IAAU,SACnC,MAAOG,GACPC,QAAQC,IAAIF,GAIhB,IACE,MAAMH,QAAeJ,EAASpC,OAC9B4C,QAAQC,IAAIL,IAEZE,OAAU,iCAAkC,aAE5ChB,EAAcN,SACd,MAAOuB,GACPC,QAAQC,IAAIF,IAEd,MAAOA,GACPC,QAAQC,IAAIF,OAMhBG,KAAKvB,SAAWA,EAChBuB,KAAKtB,MAAQA,EAEbsB,KAAKC,QAAUC,KAAKC,MAAMC,aAAaC,QAAQ,cAE/CL,KAAKM,YAAcJ,KAAKC,MAAMI,eAAeF,QAAQ,mBAErDL,KAAKQ,SAGP,eACE,MAAMjD,EAAUF,SAASG,cAAc,OACvCD,EAAQE,UAAYuC,KAAKS,WAEzB,MAAMC,EAAUnD,EAAQI,kBASxB,OARAqC,KAAKU,QAAUA,EAEXV,KAAKvB,SAASkC,QAAQX,KAAKY,eAAeZ,KAAKvB,UAEnDuB,KAAKa,YAAcb,KAAKc,eAAed,KAAKU,SAE5CV,KAAKe,qBAEEf,KAAKU,QAGdI,eAAeJ,EAAUV,KAAKU,SAG5B,MAAO,IAFUA,EAAQM,iBAAiB,mBAErBC,QAAO,CAACC,EAAOC,KAClCD,EAAMC,EAAWlC,QAAQC,SAAWiC,EAE7BD,IACN,IAGLT,WACE,MAAQ,2CAEFT,KAAKoB,6BACLpB,KAAKqB,2BACLrB,KAAKsB,+NASbA,iBACE,MAAQ,6EAEmBtB,KAAKM,YAAYlB,SAASY,KAAKM,YAAYiB,wJAQxEH,iBACE,MAAQ,oKAMEpB,KAAKwB,qCACLxB,KAAKyB,qDAMjBD,qBACE,MAAQ,qMAIFxB,KAAK0B,2CAKb,kBACE,OAAO1B,KAAKtB,MACTiD,KAAKC,GACI,kBAAiBA,EAAKC,KAAKzC,sBAAsBwC,EAAKC,KAAKzC,SAASwC,EAAKC,KAAKzC,kBAEvF0C,KAAK,IAGV,qBACE,OAAI9B,KAAK+B,oBACC,yTAcF,4PAYVV,eACE,MAAQ,kKAGFrB,KAAKgC,uKAKLhC,KAAKiC,kKAKLjC,KAAKiC,kKAKLjC,KAAKiC,kKAKLjC,KAAKiC,kKAKLjC,KAAKiC,4CAKbD,sBACE,IAAIE,EAAI,GAER,IAAK,IAAIC,EAAInC,KAAKoC,MAAOD,GAAKnC,KAAKqC,IAAKF,GAAQnC,KAAKsC,SACnDJ,EAAEK,KAAM,OAAMJ,aAGhB,OAAOD,EAAEJ,KAAK,IAGhBG,iBACE,IAAIC,EAAI,GAER,IAAK,IAAIC,EAAInC,KAAKoC,MAAOD,GAAKnC,KAAKqC,IAAKF,GAAQnC,KAAKsC,SACnDJ,EAAEK,KACC,6BACcJ,yBAKnB,OAAOD,EAAEJ,KAAK,IAGhBlB,eAAenC,GACD,IAAIA,GACZkD,KAAKzC,IACP,MAGMsD,EAHgBxC,KAAKU,QAAQpD,cAChC,cAAa4B,EAAQ2C,KAAKY,SAEInF,cAC9B,eAAc4B,EAAQ2C,KAAKa,UAG9B,OAAI1C,KAAK2C,oBACCH,EAAW/E,UAAa,8BACbyB,EAAQ0D,kBAAkB1D,EAAQ2C,KAAKzC,kEACrCF,EAAQ0D,0DACzB1D,EAAQ2C,KAAKzC,wIAMXoD,EAAW/E,UAAa,8BACXyB,EAAQ0D,kBAAkB1D,EAAQ2C,KAAKzC,uGAEtDF,EAAQ2C,KAAKzC,wCAMvB2B,qBAEE,GAAIf,KAAK2C,oBAAqB,CAC5B,MAAME,EAAe7C,KAAKU,QAAQM,iBAAiB,iBACnD,IAAK,IAAI8B,KAAUD,EACjBC,EAAOC,iBAAiB,cAAe/C,KAAKgD,sBAKhD,MAAMC,EAAkBjD,KAAKU,QAAQpD,cAAc,oBACnD2F,EAAgBF,iBAAiB,UAAU,KACzC,MAAMG,EAAeD,EAAgBE,MACrCnD,KAAKoD,eAAeF,MAIDlD,KAAKU,QAAQpD,cAAc,iBACnCyF,iBAAiB,SAAS,KACrCxC,eAAe8C,QACfC,OAAOC,SAASC,YAIpBJ,eAAeF,GACb,IAAKlD,KAAKvB,SAASkC,OACjB,OAAOf,OAAU,sBAAuB,WAE1C,GAAqB,gBAAjBsD,EAAgC,CAClC,IAAK,IAAIO,KAAQC,OAAOC,KAAK3D,KAAKa,aAChCb,KAAKa,YAAY4C,GAAMG,MAAMC,WAAa,UAG5C,MAAO,IAAI7D,KAAKvB,UAGlB,MAAMA,EAAW,IAAIuB,KAAKvB,UAEpBqF,EADQ,IAAI9D,KAAKtB,OACQqF,MAC7B,EAAGlC,UAAWA,EAAKzC,OAAS8D,IAC5BN,GAGIoB,EAAmBvF,EACtBwF,QAAQ/E,GACPA,EAAQ2C,KAAK5B,QAAQiE,OAAOC,GAAWA,EAAOvB,KAAOkB,MAEtDnC,KAAK8B,GAASA,EAAKb,KAGtB,IAAK,IAAIa,KAAQC,OAAOC,KAAK3D,KAAKa,aAChCb,KAAKa,YAAY4C,GAAMG,MAAMC,WAAa,UAI5C,IAAK,IAAIJ,KAAQO,EACXN,OAAOC,KAAK3D,KAAKa,aAAauD,SAASX,KACzCzD,KAAKa,YAAY4C,GAAMG,MAAMC,WAAa,UAI9C,OAAOG,EAGTK,UACErE,KAAKU,QAAQpC,WDvUfE,YAAYC,EAAUC,GACpB4F,MAAM7F,EAAUC,GAGlBiE,oBACE,OAAO,EAGTZ,oBACE,OAAO,GAIJ,MAAMwC,UAAchG,EACzBC,YAAYC,EAAUC,GACpB4F,MAAM7F,EAAUC,GAGlBiE,oBACE,OAAO,EAGTZ,oBACE,OAAO,GE1BI,MAAMyC,EACnBhG,YAAYE,GACVsB,KAAKC,QAAUvB,EAGjB,eACE,MAAQ,2dAUMsB,KAAKC,QACJ0B,KAAKwC,GACI,kBAAiBA,EAAOtC,KAAKzC,sBAAsB+E,EAAOtC,KAAKN,WAAW4C,EAAOtC,KAAKzC,SAAS+E,EAAOtC,KAAKN,qBAEpHO,KAAK,4Q,wHChBxB,MAAM2C,EAAcC,sCAKL,MAAMC,EAAK,4DAEV,IAFU,oBAGX,IAHW,kBAIb,IAJa,eAKhB,IALgB,yBAyJP,KAEf,MAAMC,EAAa5E,KAAKU,QAAQpD,cAAc,yBAExCuH,EAAUD,EAAWzB,MACrB2B,EAAYF,EAAWG,QAAQH,EAAWI,eAAeC,aAC7D,eAGIC,EAAqB,CAAE9F,KAAMyF,EAAStD,OAAQuD,GAGpDvE,eAAe4E,QACb,iBACAjF,KAAKkF,UAAUF,IAGjB7H,SAASC,cAAc,mBAAmBgB,SAC1CjB,SAASC,cAAc,mBAAmBgB,SAE1C0B,KAAKqF,eAAeP,GACpB9E,KAAKsF,sBAvKP,eACE,MAAQ,wVAcV,iBACE,IACE,MAAMhG,QAAiBC,MAAO,GAAEkF,2BAEhC,IAAKnF,EAASG,GACZ,IACE,MAAMC,QAAeJ,EAASK,WAC9B,OAAOC,OAAW,QAAOF,IAAU,SACnC,MAAOG,GACPC,QAAQC,IAAIF,GAIhB,IACE,MAAMH,QAAeJ,EAASiG,OAE9B,GAAuB,aAAZ7F,EACT,OAAOE,OAAU,gBAAiB,aAEpCI,KAAKtB,YAAcgB,EAAOiC,KAAK8B,IAAD,CAC5Bb,GAAIa,EAAKb,GACTf,KAAM3B,KAAKC,MAAMsD,EAAK5B,UAGxBxD,YACE,KAAMuB,OAAU,oCAAqC,cACrD,KAEF,MAAOC,GACPC,QAAQC,IAAIF,IAEd,MAAOA,GACPC,QAAQC,IAAIF,IAIhB,gBACE,IACE,MAAMP,QAAiBC,MAAO,GAAEkF,4BAEhC,IAAKnF,EAASG,GACZ,IACE,MAAMC,QAAeJ,EAASK,WAC9B,OAAOC,OAAW,QAAOF,IAAU,SACnC,MAAOG,GACPC,QAAQC,IAAIF,GAIhB,IACE,MAAMH,QAAeJ,EAASiG,OAE9B,GAAuB,aAAZ7F,EACT,OAAOE,OAAU,iBAAkB,WAErCI,KAAKvB,eAAiBiB,EAAOiC,KAAK8B,IAAD,CAC/Bb,GAAIa,EAAKb,GACTf,KAAM3B,KAAKC,MAAMsD,EAAK5B,UAGxBxD,YACE,KAAMuB,OAAU,mCAAoC,cACpD,KAEF,MAAOC,GACPC,QAAQC,IAAIF,IAEd,MAAOA,GACPC,QAAQC,IAAIF,IAIhB,eACE,MAAMa,EAAUrD,SAASG,cAAc,OACvCkD,EAAQjD,UAAYuC,KAAKwF,SAEzBxF,KAAKU,QAAUA,EAAQ/C,kBACvBqC,KAAKa,YAAcb,KAAKc,eAAed,KAAKU,eAEtCV,KAAKyF,gBACLzF,KAAK0F,WAEX,MAAMC,EAAiBzF,KAAKC,MAAMI,eAAeF,QAAQ,mBAEzD,OAAIsF,GACF3F,KAAKqF,eAAeM,EAAepE,QACnCvB,KAAKsF,mBAEEtF,KAAKU,UAGdV,KAAK4F,QAEE5F,KAAKU,SAuBdkF,QACE,MAAMC,EAAa,IAAIrB,EAAWxE,KAAKtB,OACvCsB,KAAKU,QAAQpD,cAAc,iBAAiBG,UAAYoI,EAAWL,SAEnD,IAAIzH,UAAU+H,MAC5B9F,KAAKU,QAAQpD,cAAc,mBAC3B,IAGMc,OAEiB4B,KAAKU,QAAQpD,cAAc,qBACnCyF,iBAAiB,cAAe/C,KAAK+F,gBA2BxDjF,eAAeJ,GAGb,MAAO,IAFUA,EAAQM,iBAAiB,mBAErBC,QAAO,CAACC,EAAOC,KAClCD,EAAMC,EAAWlC,QAAQyB,SAAWS,EAE7BD,IACN,IAGLmE,eAAe9D,GACb,GAAe,UAAXA,EAAoB,CACtB,MAAMyE,EAAW,IAAIzB,EAAMvE,KAAKvB,SAAUuB,KAAKtB,OAC/C,OAAQsB,KAAKiG,WAAWD,SAAWA,EAGrC,MAAMA,EAAW,IAAIzH,EAAKyB,KAAKvB,SAAUuB,KAAKtB,OAC9C,OAAQsB,KAAKiG,WAAWD,SAAWA,EAGrCV,mBACE5B,OAAOC,KAAK3D,KAAKiG,YAAYC,SAASC,IACpC,MAAMC,EAAOpG,KAAKa,YAAYsF,IACxB,QAAEzF,GAAYV,KAAKiG,WAAWE,GAEpCC,EAAKC,OAAO3F,MAIhB2D,UACE,IAAK,MAAM8B,KAAazC,OAAO4C,OAAOtG,KAAKiG,YACzCE,EAAU9B","file":"calendar-index-js.c7e0544ce220b66ba715.js","sourcesContent":["export default (message = 'API response: succesful', status) => {\n  const toastDelay = 2000;\n\n  const toastTemplate = `\n    <div class=\"toast calendar__toast_${status} align-items-center\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n      <div class=\"d-flex\">\n        <div class=\"toast-body\">\n          ${message}\n        </div>\n      </div>\n    </div>`;\n\n  const toastContainer = document.querySelector('.toast-container');\n\n  // tramsform toast template to html element\n  const wrapper = document.createElement('div');\n  wrapper.innerHTML = toastTemplate;\n  const toastElement = wrapper.firstElementChild;\n\n  toastContainer.appendChild(toastElement);\n\n  const toast = toastContainer.lastElementChild;\n  const toastRender = new bootstrap.Toast(toast, {\n    animation: true,\n    autohide: true,\n    delay: toastDelay,\n  });\n\n  toastRender.show();\n\n  setTimeout(() => {\n    toastContainer.firstElementChild.remove();\n  }, toastDelay);\n};\n","import Calendar from '../calendar';\n\nexport class User extends Calendar {\n  constructor(meetings, users) {\n    super(meetings, users);\n  }\n\n  canDeleteMeetings() {\n    return false;\n  }\n\n  canCreateMeetings() {\n    return false;\n  }\n}\n\nexport class Admin extends User {\n  constructor(meetings, users) {\n    super(meetings, users);\n  }\n\n  canDeleteMeetings() {\n    return true;\n  }\n\n  canCreateMeetings() {\n    return true;\n  }\n}\n","import showToast from '../notification';\n\nconst BACKEND_URL = process.env.BACKEND_URL;\nconst SYSTEM = process.env.SYSTEM;\nconst ENTITY_EVENTS = process.env.ENTITY_EVENTS;\n\nexport default class Calendar {\n  element; //html element\n  subElements = {}; //html element, meetings\n  start = 10;\n  end = 18;\n  duration = 1;\n\n  onRemoveMeetingClick = async (event) => {\n    const chosenMeeting = event.target.closest('[data-meeting]');\n    const chosenMeetingId = chosenMeeting.dataset.meeting;\n    const chosenMeetingName = chosenMeeting.dataset.name;\n\n    const modal = confirm(\n      `Are you sure you want to delete '${chosenMeetingName}' event?`\n    );\n\n    if (modal) {\n      try {\n        const response = await fetch(\n          `${BACKEND_URL}/${SYSTEM}/${ENTITY_EVENTS}/` + chosenMeetingId,\n          {\n            method: 'DELETE',\n          }\n        );\n\n        if (!response.ok) {\n          try {\n            const result = await response.statusText;\n            return showToast(`API: ${result}`, 'error');\n          } catch (error) {\n            console.log(error);\n          }\n        }\n\n        try {\n          const result = await response.status;\n          console.log(result);\n\n          showToast('API: event deleted succesfully', 'succesful');\n\n          chosenMeeting.remove();\n        } catch (error) {\n          console.log(error);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  constructor(meetings, users) {\n    this.meetings = meetings;\n    this.users = users;\n\n    this.members = JSON.parse(localStorage.getItem('membersDB'));\n\n    this.sessionUser = JSON.parse(sessionStorage.getItem('memberLoggedIn'));\n\n    this.render();\n  }\n\n  async render() {\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = this.getTable();\n\n    const element = wrapper.firstElementChild;\n    this.element = element;\n\n    if (this.meetings.length) this.renderMeetings(this.meetings);\n\n    this.subElements = this.getSubElements(this.element);\n\n    this.initEventListeners();\n\n    return this.element;\n  }\n\n  getSubElements(element = this.element) {\n    const elements = element.querySelectorAll('[data-meeting]');\n\n    return [...elements].reduce((accum, subElement) => {\n      accum[subElement.dataset.meeting] = subElement;\n\n      return accum;\n    }, {});\n  }\n\n  getTable() {\n    return `\n      <div class='calendar'>\n        ${this.getTableHeader()}\n        ${this.getTableBody()}\n        ${this.getTableFooter()}\n        <div aria-live=\"polite\" aria-atomic=\"true\" class=\"position-relative\">\n          <div class=\"toast-container position-fixed bottom-0 end-0 p-3\">\n\n          </div>\n        </div>\n      </div>`;\n  }\n\n  getTableFooter() {\n    return `<div class='calendar__footer'>\n      <div>\n        You are logged in as ${this.sessionUser.name} (${this.sessionUser.rights})\n      </div>\n      <button type='button' class='btn btn-outline-secondary' id='logOutButton'>\n        Log out\n      </button>\n    </div>`;\n  }\n\n  getTableHeader() {\n    return `\n      <div class='calendar__header'>\n        <div>\n          <h1>Calendar</h1>\n        </div>\n        <div class='calendar__header_handling'>\n            ${this.getMembersDropdown()}\n            ${this.getEventButton}\n        </div>\n      </div>\n    `;\n  }\n\n  getMembersDropdown() {\n    return `\n    <div class='calendar__header_handling-dropdown'>\n      <select class='form-select form-select-lg' id='membersDropdown'>\n        <option value='All members'>All members</option>\n        ${this.membersList}\n      </select>\n    </div>`;\n  }\n\n  get membersList() {\n    return this.users\n      .map((user) => {\n        return `<option value='${user.data.name}' data-member='${user.data.name}'>${user.data.name}</option>`;\n      })\n      .join('');\n  }\n\n  get getEventButton() {\n    if (this.canCreateMeetings()) {\n      return `\n    <div class='calendar__header_handling-newEventCreatingButton'>\n      <a href='/meeting-planning-calendar/create-event'>\n        <button\n          type='submit'\n          name='newEvent'\n          class='btn btn-outline-dark'\n        >\n        New event +\n        </button>\n      </a>\n    </div>`;\n    }\n\n    return `\n    <div class='calendar__header_handling-newEventCreatingButton'>\n        <button\n          type='submit'\n          name='newEvent'\n          class='btn btn-outline-dark disabled'\n        >\n        New event +\n        </button>\n    </div>`;\n  }\n\n  getTableBody() {\n    return `<div class='calendar__table'>\n      <ul class='calendar__table-column' data-day='Name'>\n        <li class='calendar__table-column-header'>Name</li>\n        ${this.getTableHoursColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Mon'>\n        <li class='calendar__table-column-header'>Mon</li>\n        ${this.getTableColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Tue'>\n        <li class='calendar__table-column-header'>Tue</li>\n        ${this.getTableColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Wed'>\n        <li class='calendar__table-column-header'>Wed</li>\n        ${this.getTableColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Thu'>\n        <li class='calendar__table-column-header'>Thu</li>\n        ${this.getTableColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Fri'>\n        <li class='calendar__table-column-header'>Fri</li>\n        ${this.getTableColumn()}\n      </ul>\n    </div>`;\n  }\n\n  getTableHoursColumn() {\n    let a = [];\n\n    for (let i = this.start; i <= this.end; i = i + this.duration) {\n      a.push(`<li>${i}:00</li>`);\n    }\n\n    return a.join('');\n  }\n\n  getTableColumn() {\n    let a = [];\n\n    for (let i = this.start; i <= this.end; i = i + this.duration) {\n      a.push(\n        `<li\n          data-time='${i}:00'\n        ></li>`\n      );\n    }\n\n    return a.join('');\n  }\n\n  renderMeetings(meetings) {\n    const arr = [...meetings];\n    arr.map((meeting) => {\n      const currentColumn = this.element.querySelector(\n        `[data-day='${meeting.data.day}']`\n      );\n      const currentRow = currentColumn.querySelector(\n        `[data-time='${meeting.data.time}']`\n      );\n\n      if (this.canDeleteMeetings()) {\n        return (currentRow.innerHTML = `\n      <div data-meeting='${meeting.id}' data-name='${meeting.data.name}' style='visibility: visible'>\n        <a href='/meetings/${meeting.id}' class='calendar__table-column_meeting'>\n          ${meeting.data.name}\n        </a>\n        <button class='calendar__table-column_meeting_delete' data-delete='delete'>&times;</button>\n      </div>`);\n      }\n\n      return (currentRow.innerHTML = `\n      <div data-meeting='${meeting.id}' data-name='${meeting.data.name}' style='visibility: visible'>\n        <div class='calendar__table-column_meeting'>\n          ${meeting.data.name}\n        </div>\n      </div>`);\n    });\n  }\n\n  initEventListeners() {\n    // remove event from calendar\n    if (this.canDeleteMeetings()) {\n      const deleteButton = this.element.querySelectorAll('[data-delete]');\n      for (let button of deleteButton) {\n        button.addEventListener('pointerdown', this.onRemoveMeetingClick);\n      }\n    }\n\n    // filter events by team member\n    const membersDropdown = this.element.querySelector('#membersDropdown');\n    membersDropdown.addEventListener('change', () => {\n      const chosenMember = membersDropdown.value;\n      this.filterMeetings(chosenMember);\n    });\n\n    // log out from user session\n    const logOutButton = this.element.querySelector('#logOutButton');\n    logOutButton.addEventListener('click', () => {\n      sessionStorage.clear();\n      window.location.reload();\n    });\n  }\n\n  filterMeetings(chosenMember) {\n    if (!this.meetings.length)\n      return showToast('No events to filter', 'warning');\n\n    if (chosenMember === 'All members') {\n      for (let item of Object.keys(this.subElements)) {\n        this.subElements[item].style.visibility = 'visible';\n      }\n\n      return [...this.meetings];\n    }\n\n    const meetings = [...this.meetings];\n    const users = [...this.users];\n    const idOfChosenMember = users.find(\n      ({ data }) => data.name === chosenMember\n    ).id;\n\n    // get all meetings that must be disabled\n    const filteredMeetings = meetings\n      .filter((meeting) =>\n        meeting.data.members.every((member) => member.id !== idOfChosenMember)\n      )\n      .map((item) => item.id);\n\n    // insert style = 'display: visible' into all meetings\n    for (let item of Object.keys(this.subElements)) {\n      this.subElements[item].style.visibility = 'visible';\n    }\n\n    // insert style = 'display: none' into filtered¸ meetings\n    for (let item of filteredMeetings) {\n      if (Object.keys(this.subElements).includes(item)) {\n        this.subElements[item].style.visibility = 'hidden';\n      }\n    }\n\n    return filteredMeetings;\n  }\n\n  destroy() {\n    this.element.remove();\n  }\n}\n","export default class LogInModal {\n  constructor(users) {\n    this.members = users;\n  }\n\n  get template() {\n    return `\n    <div class=\"modal fade modal-dialog\"  id=\"staticBackdrop\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Who are You?</h5>\n          </div>\n          <div class=\"modal-body\">\n            <div class='calendar__header_handling-dropdown'>\n              <select class='form-select form-select-lg' id='membersDropdownModal'>\n                ${this.members\n                  .map((member) => {\n                    return `<option value='${member.data.name}' data-rights='${member.data.rights}'>${member.data.name} (${member.data.rights})</option>`;\n                  })\n                  .join('')}\n              </select>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" id=\"submitRoleButton\">Confirm</button>\n          </div>\n        </div>\n      </div>\n    </div>`;\n  }\n}\n","import { User, Admin } from '../../components/userRoles';\nimport LogInModal from '../../components/logIn-modal';\nimport showToast from '../../components/notification';\n\nconst BACKEND_URL = process.env.BACKEND_URL;\nconst SYSTEM = process.env.SYSTEM;\nconst ENTITY_EVENTS = process.env.ENTITY_EVENTS;\nconst ENTITY_USERS = process.env.ENTITY_USERS;\n\nexport default class Page {\n  element; //html element\n  subElements = {}; //selected elements\n  components = {}; //imported initialized components\n  meetings = {};\n  users = {};\n\n  get template() {\n    return `\n      <div>\n        <div data-element=\"calendar\" id=\"calendarPage\">\n          <!-- Calendar component -->\n        </div>\n        <div aria-live=\"polite\" aria-atomic=\"true\" class=\"position-relative\">\n          <div class=\"toast-container position-fixed bottom-0 end-0 p-3\">\n\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  async getUsers() {\n    try {\n      const response = await fetch(`${BACKEND_URL}/${SYSTEM}/${ENTITY_USERS}`);\n\n      if (!response.ok) {\n        try {\n          const result = await response.statusText;\n          return showToast(`API: ${result}`, 'error');\n        } catch (error) {\n          console.log(error);\n        }\n      }\n\n      try {\n        const result = await response.json();\n\n        if ((await result) === null)\n          return showToast('API: no users', 'succesful');\n\n        this.users = await result.map((item) => ({\n          id: item.id,\n          data: JSON.parse(item.data),\n        }));\n\n        setTimeout(\n          () => showToast('API: users downloaded succesfully', 'succesful'),\n          100\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getData() {\n    try {\n      const response = await fetch(`${BACKEND_URL}/${SYSTEM}/${ENTITY_EVENTS}`);\n\n      if (!response.ok) {\n        try {\n          const result = await response.statusText;\n          return showToast(`API: ${result}`, 'error');\n        } catch (error) {\n          console.log(error);\n        }\n      }\n\n      try {\n        const result = await response.json();\n\n        if ((await result) === null)\n          return showToast('API: no events', 'warning');\n\n        this.meetings = await result.map((item) => ({\n          id: item.id,\n          data: JSON.parse(item.data),\n        }));\n\n        setTimeout(\n          () => showToast('API: data downloaded succesfully', 'succesful'),\n          100\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async render() {\n    const element = document.createElement('div');\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(this.element);\n\n    await this.getData();\n    await this.getUsers();\n\n    const getSessionUser = JSON.parse(sessionStorage.getItem('memberLoggedIn'));\n\n    if (getSessionUser) {\n      this.initComponents(getSessionUser.rights);\n      this.renderComponents();\n\n      return this.element;\n    }\n\n    this.modal();\n\n    return this.element;\n  }\n\n  // async sendUsersToServer() {\n  //   // post users to server\n  //   try {\n  //     const response = await fetch(`${BACKEND_URL}/${SYSTEM}/${ENTITY_USERS}`, {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json;charset=utf-8',\n  //       },\n  //       body: JSON.stringify({\n  //         data: JSON.stringify(membersTemplate[0]),\n  //       }),\n  //     });\n\n  //     const result = await response.status;\n  //     console.log(result);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n\n  modal() {\n    const logInModal = new LogInModal(this.users);\n    this.element.querySelector('#calendarPage').innerHTML = logInModal.template;\n\n    const myModal = new bootstrap.Modal(\n      this.element.querySelector('#staticBackdrop'),\n      {}\n    );\n\n    myModal.show();\n\n    const submitRoleButton = this.element.querySelector('#submitRoleButton');\n    submitRoleButton.addEventListener('pointerdown', this.onDefineRights);\n  }\n\n  onDefineRights = () => {\n    // set logged in member as default selected member in calendar dropdown\n    const getMembers = this.element.querySelector('#membersDropdownModal');\n\n    const getName = getMembers.value;\n    const getRights = getMembers.options[getMembers.selectedIndex].getAttribute(\n      'data-rights'\n    );\n\n    const memberLoggedInData = { name: getName, rights: getRights };\n\n    // set session user rights\n    sessionStorage.setItem(\n      'memberLoggedIn',\n      JSON.stringify(memberLoggedInData)\n    );\n\n    document.querySelector('#staticBackdrop').remove();\n    document.querySelector('.modal-backdrop').remove();\n\n    this.initComponents(getRights);\n    this.renderComponents();\n  };\n\n  getSubElements(element) {\n    const elements = element.querySelectorAll('[data-element]');\n\n    return [...elements].reduce((accum, subElement) => {\n      accum[subElement.dataset.element] = subElement;\n\n      return accum;\n    }, {});\n  }\n\n  initComponents(rights) {\n    if (rights === 'admin') {\n      const calendar = new Admin(this.meetings, this.users);\n      return (this.components.calendar = calendar);\n    }\n\n    const calendar = new User(this.meetings, this.users);\n    return (this.components.calendar = calendar);\n  }\n\n  renderComponents() {\n    Object.keys(this.components).forEach((component) => {\n      const root = this.subElements[component];\n      const { element } = this.components[component];\n\n      root.append(element);\n    });\n  }\n\n  destroy() {\n    for (const component of Object.values(this.components)) {\n      component.destroy();\n    }\n  }\n}\n"],"sourceRoot":""}