(self.webpackChunk=self.webpackChunk||[]).push([[849],{207:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>m});const s=[{id:"0001",name:"Polina",rights:"admin"},{id:"0002",name:"Maria",rights:"user"},{id:"0003",name:"Bob",rights:"user"},{id:"0004",name:"Alex",rights:"user"}],i=[{id:"0000-0000-0000-0001",name:"Daily Standup",day:"Mon",time:"11:00",members:[{id:"0001"},{id:"0002"},{id:"0003"},{id:"0004"}]},{id:"0000-0000-0000-0002",name:"Annual planning session",day:"Wed",time:"13:00",members:[{id:"0001"},{id:"0002"}]},{id:"0000-0000-0000-0003",name:"Retrospective",day:"Fri",time:"17:00",members:[{id:"0003"},{id:"0004"}]},{id:"0000-0000-0000-0004",name:"FE team sync",day:"Thu",time:"17:00",members:[{id:"0004"}]},{id:"0000-0000-0000-0005",name:"Planning session",day:"Tue",time:"10:00",members:[{id:"0001"},{id:"0004"}]}];function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class l extends class{constructor(){a(this,"element",void 0),a(this,"subElements",{}),a(this,"start",10),a(this,"end",18),a(this,"duration",1),a(this,"onRemoveMeetingClick",(e=>{const t=e.target.closest("[data-meeting]"),n=t.dataset.name,s=JSON.parse(localStorage.getItem("meetingsDB")).filter((e=>e.id!==t.dataset.meeting));localStorage.setItem("meetingsDB",JSON.stringify(s)),confirm(`Are you sure you want to delete '${n}' event?`)&&t.remove()})),this.meetings=JSON.parse(localStorage.getItem("meetingsDB")),this.members=JSON.parse(localStorage.getItem("membersDB")),this.sessionUser=JSON.parse(sessionStorage.getItem("memberLoggedIn")),this.render()}render(){const e=document.createElement("div");e.innerHTML=this.getTable();const t=e.firstElementChild;return this.element=t,this.renderMeetings(this.meetings),this.subElements=this.getSubElements(this.element),this.initEventListeners(),this.element}getSubElements(e){return[...e.querySelectorAll("[data-meeting]")].reduce(((e,t)=>(e[t.dataset.meeting]=t,e)),{})}getTable(){return`\n      <div class='calendar'>\n        ${this.getTableHeader()}\n        ${this.getTableBody()}\n        ${this.getTableFooter()}\n      </div>`}getTableFooter(){return`<div class='calendar__footer'>\n      <div>\n        You are logged in as ${this.sessionUser.name} (${this.sessionUser.rights})\n      </div>\n      <button type='button' class='btn btn-outline-secondary' id='logOutButton'>\n        Log out\n      </button>\n    </div>`}getTableHeader(){return`\n      <div class='calendar__header'>\n        <div>\n          <h1>Calendar</h1>\n        </div>\n        <div class='calendar__header_handling'>\n            ${this.getMembersDropdown()}\n            ${this.getEventButton}\n        </div>\n      </div>\n    `}getMembersDropdown(){return`\n    <div class='calendar__header_handling-dropdown'>\n      <select class='form-select form-select-lg' id='membersDropdown'>\n        <option value='All members'>All members</option>\n        ${this.membersList}\n      </select>\n    </div>`}get membersList(){return this.members.map((e=>`<option value='${e.name}' data-member='${e.name}'>${e.name}</option>`)).join("")}get getEventButton(){return this.canCreateMeetings()?"\n    <div class='calendar__header_handling-newEventCreatingButton'>\n      <a href='/meeting-planning-calendar/create-event'>\n        <button\n          type='submit'\n          name='newEvent'\n          class='btn btn-outline-dark'\n        >\n        New event +\n        </button>\n      </a>\n    </div>":"\n    <div class='calendar__header_handling-newEventCreatingButton'>\n        <button\n          type='submit'\n          name='newEvent'\n          class='btn btn-outline-dark disabled'\n        >\n        New event +\n        </button>\n    </div>"}getTableBody(){return`<div class='calendar__table'>\n      <ul class='calendar__table-column' data-day='Name'>\n        <li class='calendar__table-column-header'>Name</li>\n        ${this.getTableHoursColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Mon'>\n        <li class='calendar__table-column-header'>Mon</li>\n        ${this.getTableColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Tue'>\n        <li class='calendar__table-column-header'>Tue</li>\n        ${this.getTableColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Wed'>\n        <li class='calendar__table-column-header'>Wed</li>\n        ${this.getTableColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Thu'>\n        <li class='calendar__table-column-header'>Thu</li>\n        ${this.getTableColumn()}\n      </ul>\n\n      <ul class='calendar__table-column' data-day='Fri'>\n        <li class='calendar__table-column-header'>Fri</li>\n        ${this.getTableColumn()}\n      </ul>\n    </div>`}getTableHoursColumn(){let e=[];for(let t=this.start;t<=this.end;t+=this.duration)e.push(`<li>${t}:00</li>`);return e.join("")}getTableColumn(){let e=[];for(let t=this.start;t<=this.end;t+=this.duration)e.push(`<li\n          data-time='${t}:00'\n        ></li>`);return e.join("")}renderMeetings(e){[...e].map((e=>{const t=this.element.querySelector(`[data-day='${e.day}']`).querySelector(`[data-time='${e.time}']`);return this.canDeleteMeetings()?t.innerHTML=`\n      <div data-meeting='${e.id}' data-name='${e.name}' style='visibility: visible'>\n        <a href='/meetings/${e.id}' class='calendar__table-column_meeting'>\n          ${e.name}\n        </a>\n        <button class='calendar__table-column_meeting_delete' data-delete='delete'>&times;</button>\n      </div>`:t.innerHTML=`\n      <div data-meeting='${e.id}' data-name='${e.name}' style='visibility: visible'>\n        <div class='calendar__table-column_meeting'>\n          ${e.name}\n        </div>\n      </div>`}))}initEventListeners(){if(this.canDeleteMeetings()){const e=this.element.querySelectorAll("[data-delete]");for(let t of e)t.addEventListener("pointerdown",this.onRemoveMeetingClick)}const e=this.element.querySelector("#membersDropdown");e.addEventListener("change",(()=>{const t=e.value;this.filterMeetings(t)})),this.element.querySelector("#logOutButton").addEventListener("click",(()=>{sessionStorage.clear(),window.location.reload()}))}filterMeetings(e){if("All members"===e){for(let e of Object.keys(this.subElements))this.subElements[e].style.visibility="visible";return[...this.meetings]}const t=[...this.meetings],n=[...this.members].find((({name:t})=>t===e)).id,s=t.filter((({members:e})=>e.every((({id:e})=>e!==n)))).map((e=>e.id));for(let e of Object.keys(this.subElements))this.subElements[e].style.visibility="visible";for(let e of s)Object.keys(this.subElements).includes(e)&&(this.subElements[e].style.visibility="hidden");return s}destroy(){this.element.remove()}}{constructor(){super()}canDeleteMeetings(){return!1}canCreateMeetings(){return!1}}class r extends l{constructor(){super()}canDeleteMeetings(){return!0}canCreateMeetings(){return!0}}class o{constructor(){this.members=JSON.parse(localStorage.getItem("membersDB"))}get template(){return`\n    <div class="modal fade modal-dialog"  id="staticBackdrop">\n      <div class="modal-dialog">\n        <div class="modal-content">\n          <div class="modal-header">\n            <h5 class="modal-title" id="staticBackdropLabel">Who are You?</h5>\n          </div>\n          <div class="modal-body">\n            <div class='calendar__header_handling-dropdown'>\n              <select class='form-select form-select-lg' id='membersDropdownModal'>\n                ${this.members.map((e=>`<option value='${e.name}' data-rights='${e.rights}'>${e.name} (${e.rights})</option>`)).join("")}\n              </select>\n            </div>\n          </div>\n          <div class="modal-footer">\n            <button type="button" class="btn btn-secondary" id="submitRoleButton">Confirm</button>\n          </div>\n        </div>\n      </div>\n    </div>`}}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class m{constructor(){d(this,"element",void 0),d(this,"subElements",{}),d(this,"components",{}),d(this,"onDefineRights",(()=>{const e=this.element.querySelector("#membersDropdownModal"),t=e.value,n=e.options[e.selectedIndex].getAttribute("data-rights"),s={name:t,rights:n};sessionStorage.setItem("memberLoggedIn",JSON.stringify(s)),document.querySelector("#staticBackdrop").remove(),document.querySelector(".modal-backdrop").remove(),this.initComponents(n),this.renderComponents()})),null===JSON.parse(localStorage.getItem("meetingsDB"))&&localStorage.setItem("meetingsDB",JSON.stringify(i)),localStorage.setItem("membersDB",JSON.stringify(s))}get template(){return'\n      <div>\n        <div data-element="calendar" id="calendarPage">\n          \x3c!-- Calendar component --\x3e\n        </div>\n      </div>\n    '}render(){const e=document.createElement("div");e.innerHTML=this.template,this.element=e.firstElementChild,this.subElements=this.getSubElements(this.element);const t=JSON.parse(sessionStorage.getItem("memberLoggedIn"));return t?(this.initComponents(t.rights),this.renderComponents(),this.element):(this.modal(),this.element)}modal(){const e=new o;this.element.querySelector("#calendarPage").innerHTML=e.template,new bootstrap.Modal(this.element.querySelector("#staticBackdrop"),{}).show(),this.element.querySelector("#submitRoleButton").addEventListener("pointerdown",this.onDefineRights)}getSubElements(e){return[...e.querySelectorAll("[data-element]")].reduce(((e,t)=>(e[t.dataset.element]=t,e)),{})}initComponents(e){if("admin"===e){const e=new r;return this.components.calendar=e}const t=new l;return this.components.calendar=t}renderComponents(){Object.keys(this.components).forEach((e=>{const t=this.subElements[e],{element:n}=this.components[e];t.append(n)}))}destroy(){for(const e of Object.values(this.components))e.destroy()}}}}]);
//# sourceMappingURL=calendar-index-js.d802b61b7667e0349ff4.js.map